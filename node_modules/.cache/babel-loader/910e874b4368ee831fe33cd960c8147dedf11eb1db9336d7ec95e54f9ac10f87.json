{"ast":null,"code":"var _jsxFileName = \"/Users/petakirikiri/Coding/Ka Piki/src/pages/ClientsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sendEmail, hasValidCredentials, startOAuthFlow } from \"../services/emailService\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Airtable from \"airtable\";\n\n// Debug the environment variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('Raw env values:', {\n  key: process.env.REACT_APP_AIRTABLE_API_KEY,\n  base: process.env.REACT_APP_AIRTABLE_BASE_ID\n});\n\n// Initialize Airtable\nconst base = new Airtable({\n  apiKey: 'patuHJGGTaXKERLC8.4f23e14326051a35f41bce0041488811711e1d2cad67892e767744474fa107cb'\n}).base('app054uJcxxiTUK7p');\n\n// Table and View IDs\nconst CLIENTS_TABLE_ID = 'tblY7oFqsMB7nYorj';\nconst CLIENTS_VIEW_ID = 'viwXaXxc30vOprTcd';\nconst EMAIL_TABLE_ID = 'tblRS46arAPZtfY1R';\nconst EMAIL_VIEW_ID = 'viwtidKFNeXp0cfkQ';\nexport default function ClientsPage() {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [selectedClients, setSelectedClients] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [emailTemplate, setEmailTemplate] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const checkCredentials = async () => {\n      try {\n        const isValid = await hasValidCredentials();\n        console.log(\"Gmail credentials status:\", isValid ? \"Valid\" : \"Not valid\");\n        if (!isValid) {\n          await startOAuthFlow();\n          return;\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error checking credentials:\", error);\n        setIsLoading(false);\n      }\n    };\n    checkCredentials();\n  }, [navigate]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch email template first\n        console.log('Fetching email template...');\n        const templateRecords = await base(EMAIL_TABLE_ID).select({\n          view: EMAIL_VIEW_ID\n        }).all();\n        if (templateRecords && templateRecords.length > 0) {\n          const template = templateRecords[0];\n          setEmailTemplate({\n            subject: template.fields.Subject || \"\",\n            body: template.fields.Body || \"\"\n          });\n        }\n\n        // Fetch clients\n        console.log('Fetching clients from Airtable...');\n        const records = await base(CLIENTS_TABLE_ID).select({\n          view: CLIENTS_VIEW_ID\n        }).all();\n        console.log('Got records:', records);\n        const clientsData = records.map(record => ({\n          id: record.id,\n          organizationName: record.fields.OrganizationName || \"\",\n          contactName: record.fields.ContactName || \"\",\n          email: record.fields.Email || \"\",\n          websiteURL: record.fields.WebsiteURL || \"\",\n          sourceType: record.fields.SourceType || \"\"\n        }));\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        console.error(\"Full error object:\", JSON.stringify(error, null, 2));\n        setError(\"Failed to fetch data: \" + error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSendEmail = async () => {\n    if (!emailTemplate || selectedClients.length === 0) return;\n    setIsSending(true);\n    setError(\"\");\n    setSuccess(\"\");\n    try {\n      for (const clientId of selectedClients) {\n        const client = clients.find(c => c.id === clientId);\n        if (client) {\n          await sendEmail(client.email, emailTemplate.subject, emailTemplate.body);\n        }\n      }\n      setSuccess(\"Emails sent successfully!\");\n      setSelectedClients([]);\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      setError(error.message || \"Failed to send email\");\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const toggleClient = clientId => {\n    setSelectedClients(prev => prev.includes(clientId) ? prev.filter(id => id !== clientId) : [...prev, clientId]);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48px',\n            height: '48px',\n            border: '2px solid #f3f3f3',\n            borderTop: '2px solid #3498db',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            margin: '0 auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '1rem',\n            color: '#666'\n          },\n          children: \"Checking Gmail credentials...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendEmail,\n      disabled: isSending || selectedClients.length === 0,\n      style: {\n        marginBottom: '20px',\n        padding: '5px 10px',\n        cursor: 'pointer',\n        opacity: isSending || selectedClients.length === 0 ? 0.5 : 1\n      },\n      children: \"Send Email Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green',\n        marginBottom: '10px'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              textAlign: 'left',\n              padding: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedClients.length === clients.length,\n              onChange: () => {\n                if (selectedClients.length === clients.length) {\n                  setSelectedClients([]);\n                } else {\n                  setSelectedClients(clients.map(c => c.id));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              textAlign: 'left',\n              padding: '8px'\n            },\n            children: \"Organization Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              textAlign: 'left',\n              padding: '8px'\n            },\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              textAlign: 'left',\n              padding: '8px'\n            },\n            children: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedClients.includes(client.id),\n              onChange: () => toggleClient(client.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: [client.organizationName, \" \", client.contactName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: client.websiteURL,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: client.websiteURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, client.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientsPage, \"kEH4OC1NJXFe9xr1S5AcWkRUTsQ=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ClientsPage;\nvar _c;\n$RefreshReg$(_c, \"ClientsPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","sendEmail","hasValidCredentials","startOAuthFlow","useAuth","Airtable","jsxDEV","_jsxDEV","console","log","key","process","env","REACT_APP_AIRTABLE_API_KEY","base","REACT_APP_AIRTABLE_BASE_ID","apiKey","CLIENTS_TABLE_ID","CLIENTS_VIEW_ID","EMAIL_TABLE_ID","EMAIL_VIEW_ID","ClientsPage","_s","clients","setClients","selectedClients","setSelectedClients","isLoading","setIsLoading","isSending","setIsSending","emailTemplate","setEmailTemplate","error","setError","success","setSuccess","navigate","user","checkCredentials","isValid","fetchData","templateRecords","select","view","all","length","template","subject","fields","Subject","body","Body","records","clientsData","map","record","id","organizationName","OrganizationName","contactName","ContactName","email","Email","websiteURL","WebsiteURL","sourceType","SourceType","JSON","stringify","message","handleSendEmail","clientId","client","find","c","toggleClient","prev","includes","filter","style","display","alignItems","justifyContent","minHeight","children","textAlign","width","height","border","borderTop","borderRadius","animation","margin","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","color","padding","onClick","disabled","marginBottom","cursor","opacity","borderCollapse","type","checked","onChange","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/petakirikiri/Coding/Ka Piki/src/pages/ClientsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sendEmail, hasValidCredentials, startOAuthFlow } from \"../services/emailService\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Airtable from \"airtable\";\n\n// Debug the environment variables\nconsole.log('Raw env values:', {\n  key: process.env.REACT_APP_AIRTABLE_API_KEY,\n  base: process.env.REACT_APP_AIRTABLE_BASE_ID\n});\n\n// Initialize Airtable\nconst base = new Airtable({\n  apiKey: 'patuHJGGTaXKERLC8.4f23e14326051a35f41bce0041488811711e1d2cad67892e767744474fa107cb'\n}).base('app054uJcxxiTUK7p');\n\n// Table and View IDs\nconst CLIENTS_TABLE_ID = 'tblY7oFqsMB7nYorj';\nconst CLIENTS_VIEW_ID = 'viwXaXxc30vOprTcd';\nconst EMAIL_TABLE_ID = 'tblRS46arAPZtfY1R';\nconst EMAIL_VIEW_ID = 'viwtidKFNeXp0cfkQ';\n\nexport default function ClientsPage() {\n  const [clients, setClients] = useState([]);\n  const [selectedClients, setSelectedClients] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSending, setIsSending] = useState(false);\n  const [emailTemplate, setEmailTemplate] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    const checkCredentials = async () => {\n      try {\n        const isValid = await hasValidCredentials();\n        console.log(\"Gmail credentials status:\", isValid ? \"Valid\" : \"Not valid\");\n        \n        if (!isValid) {\n          await startOAuthFlow();\n          return;\n        }\n        \n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error checking credentials:\", error);\n        setIsLoading(false);\n      }\n    };\n\n    checkCredentials();\n  }, [navigate]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch email template first\n        console.log('Fetching email template...');\n        const templateRecords = await base(EMAIL_TABLE_ID).select({\n          view: EMAIL_VIEW_ID\n        }).all();\n        \n        if (templateRecords && templateRecords.length > 0) {\n          const template = templateRecords[0];\n          setEmailTemplate({\n            subject: template.fields.Subject || \"\",\n            body: template.fields.Body || \"\",\n          });\n        }\n\n        // Fetch clients\n        console.log('Fetching clients from Airtable...');\n        const records = await base(CLIENTS_TABLE_ID).select({\n          view: CLIENTS_VIEW_ID\n        }).all();\n        \n        console.log('Got records:', records);\n\n        const clientsData = records.map(record => ({\n          id: record.id,\n          organizationName: record.fields.OrganizationName || \"\",\n          contactName: record.fields.ContactName || \"\",\n          email: record.fields.Email || \"\",\n          websiteURL: record.fields.WebsiteURL || \"\",\n          sourceType: record.fields.SourceType || \"\",\n        }));\n\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        console.error(\"Full error object:\", JSON.stringify(error, null, 2));\n        setError(\"Failed to fetch data: \" + error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSendEmail = async () => {\n    if (!emailTemplate || selectedClients.length === 0) return;\n\n    setIsSending(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    try {\n      for (const clientId of selectedClients) {\n        const client = clients.find(c => c.id === clientId);\n        if (client) {\n          await sendEmail(\n            client.email,\n            emailTemplate.subject,\n            emailTemplate.body\n          );\n        }\n      }\n      setSuccess(\"Emails sent successfully!\");\n      setSelectedClients([]);\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      setError(error.message || \"Failed to send email\");\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  const toggleClient = (clientId) => {\n    setSelectedClients(prev => \n      prev.includes(clientId) \n        ? prev.filter(id => id !== clientId)\n        : [...prev, clientId]\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <div style={{ \n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '100vh'\n      }}>\n        <div style={{ textAlign: 'center' }}>\n          <div style={{\n            width: '48px',\n            height: '48px',\n            border: '2px solid #f3f3f3',\n            borderTop: '2px solid #3498db',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            margin: '0 auto'\n          }}>\n          </div>\n          <p style={{ marginTop: '1rem', color: '#666' }}>Checking Gmail credentials...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Clients</h1>\n      \n      <button\n        onClick={handleSendEmail}\n        disabled={isSending || selectedClients.length === 0}\n        style={{ \n          marginBottom: '20px',\n          padding: '5px 10px',\n          cursor: 'pointer',\n          opacity: (isSending || selectedClients.length === 0) ? 0.5 : 1\n        }}\n      >\n        Send Email Template\n      </button>\n\n      {error && <div style={{ color: 'red', marginBottom: '10px' }}>{error}</div>}\n      {success && <div style={{ color: 'green', marginBottom: '10px' }}>{success}</div>}\n\n      <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n        <thead>\n          <tr>\n            <th style={{ textAlign: 'left', padding: '8px' }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedClients.length === clients.length}\n                onChange={() => {\n                  if (selectedClients.length === clients.length) {\n                    setSelectedClients([]);\n                  } else {\n                    setSelectedClients(clients.map(c => c.id));\n                  }\n                }}\n              />\n            </th>\n            <th style={{ textAlign: 'left', padding: '8px' }}>Organization Contact</th>\n            <th style={{ textAlign: 'left', padding: '8px' }}>Email</th>\n            <th style={{ textAlign: 'left', padding: '8px' }}>Website</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clients.map((client) => (\n            <tr key={client.id}>\n              <td style={{ padding: '8px' }}>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedClients.includes(client.id)}\n                  onChange={() => toggleClient(client.id)}\n                />\n              </td>\n              <td style={{ padding: '8px' }}>\n                {client.organizationName} {client.contactName}\n              </td>\n              <td style={{ padding: '8px' }}>{client.email}</td>\n              <td style={{ padding: '8px' }}>\n                <a href={client.websiteURL} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {client.websiteURL}\n                </a>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}