{"ast":null,"code":"var _jsxFileName = \"/Users/petakirikiri/Coding/Ka Piki/src/components/ClientsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { table, emailTemplatesTable } from '../config/airtable';\nimport { sendEmail } from '../services/emailService';\nimport Navigation from './Navigation';\nimport '../styles/clients.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientsPage = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [selectedClients, setSelectedClients] = useState(new Set());\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [emailTemplate, setEmailTemplate] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const [sendingStatus, setSendingStatus] = useState('');\n  useEffect(() => {\n    fetchClients();\n    fetchEmailTemplate();\n  }, []);\n  const fetchClients = async () => {\n    try {\n      const records = await table.select().all();\n      const clientData = records.map(record => ({\n        id: record.id,\n        ...record.fields\n      }));\n      setClients(clientData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching clients:', err);\n      setError('Failed to load clients. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const fetchEmailTemplate = async () => {\n    try {\n      const records = await emailTemplatesTable.select().all();\n      if (records.length > 0) {\n        setEmailTemplate(records[0].fields.Script1 || 'Test');\n      } else {\n        // Create default template if none exists\n        await emailTemplatesTable.create([{\n          fields: {\n            Script1: 'Test'\n          }\n        }]);\n        setEmailTemplate('Test');\n      }\n    } catch (err) {\n      console.error('Error fetching email template:', err);\n      setEmailTemplate('Test'); // Fallback to default\n    }\n  };\n  const updateEmailTemplate = async newTemplate => {\n    try {\n      const records = await emailTemplatesTable.select().all();\n      if (records.length > 0) {\n        await emailTemplatesTable.update([{\n          id: records[0].id,\n          fields: {\n            Script1: newTemplate\n          }\n        }]);\n      }\n      setEmailTemplate(newTemplate);\n    } catch (err) {\n      console.error('Error updating email template:', err);\n    }\n  };\n  const handleSelectClient = clientId => {\n    setSelectedClients(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(clientId)) {\n        newSelected.delete(clientId);\n      } else {\n        newSelected.add(clientId);\n      }\n      return newSelected;\n    });\n  };\n  const handleSelectAll = () => {\n    if (selectedClients.size === clients.length) {\n      setSelectedClients(new Set());\n    } else {\n      setSelectedClients(new Set(clients.map(client => client.id)));\n    }\n  };\n  const handleSendEmail = async () => {\n    const selectedClientEmails = clients.filter(client => selectedClients.has(client.id)).map(client => client.Email);\n    if (selectedClientEmails.length === 0) {\n      setSendingStatus('Please select at least one client.');\n      return;\n    }\n    setIsSending(true);\n    setSendingStatus('Sending emails...');\n    try {\n      await sendEmail(selectedClientEmails, 'Ka Piki Update', emailTemplate);\n      setSendingStatus('Emails sent successfully!');\n      setSelectedClients(new Set());\n    } catch (err) {\n      console.error('Error sending emails:', err);\n      setSendingStatus(err.message || 'Failed to send emails. Please try again.');\n    } finally {\n      setIsSending(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clients-loading\",\n    children: \"Loading clients...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clients-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clients-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clients-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template-editor\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"emailTemplate\",\n            children: \"Email Template:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"emailTemplate\",\n            value: emailTemplate,\n            onChange: e => updateEmailTemplate(e.target.value),\n            className: \"template-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-email-button\",\n          onClick: handleSendEmail,\n          disabled: selectedClients.size === 0 || isSending,\n          children: isSending ? 'Sending...' : `Send Email (${selectedClients.size} selected)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), sendingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-message ${sendingStatus.includes('success') ? 'success' : 'error'}`,\n      children: sendingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clients-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedClients.size === clients.length && clients.length > 0,\n                onChange: handleSelectAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Organization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedClients.has(client.id),\n                onChange: () => handleSelectClient(client.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.OrganizationName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.ContactName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: client.Email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(client.SourceType) ? client.SourceType.join(', ') : client.SourceType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, client.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientsPage, \"c88IHe590IlOGs/tLq9BYSD6KSs=\");\n_c = ClientsPage;\nexport default ClientsPage;\nvar _c;\n$RefreshReg$(_c, \"ClientsPage\");","map":{"version":3,"names":["useState","useEffect","table","emailTemplatesTable","sendEmail","Navigation","jsxDEV","_jsxDEV","ClientsPage","_s","clients","setClients","selectedClients","setSelectedClients","Set","loading","setLoading","error","setError","emailTemplate","setEmailTemplate","isSending","setIsSending","sendingStatus","setSendingStatus","fetchClients","fetchEmailTemplate","records","select","all","clientData","map","record","id","fields","err","console","length","Script1","create","updateEmailTemplate","newTemplate","update","handleSelectClient","clientId","prev","newSelected","has","delete","add","handleSelectAll","size","client","handleSendEmail","selectedClientEmails","filter","Email","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","onClick","disabled","includes","checked","OrganizationName","ContactName","Array","isArray","SourceType","join","_c","$RefreshReg$"],"sources":["/Users/petakirikiri/Coding/Ka Piki/src/components/ClientsPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { table, emailTemplatesTable } from '../config/airtable';\nimport { sendEmail } from '../services/emailService';\nimport Navigation from './Navigation';\nimport '../styles/clients.css';\n\nconst ClientsPage = () => {\n  const [clients, setClients] = useState([]);\n  const [selectedClients, setSelectedClients] = useState(new Set());\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [emailTemplate, setEmailTemplate] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const [sendingStatus, setSendingStatus] = useState('');\n\n  useEffect(() => {\n    fetchClients();\n    fetchEmailTemplate();\n  }, []);\n\n  const fetchClients = async () => {\n    try {\n      const records = await table.select().all();\n      const clientData = records.map(record => ({\n        id: record.id,\n        ...record.fields\n      }));\n      setClients(clientData);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching clients:', err);\n      setError('Failed to load clients. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  const fetchEmailTemplate = async () => {\n    try {\n      const records = await emailTemplatesTable.select().all();\n      if (records.length > 0) {\n        setEmailTemplate(records[0].fields.Script1 || 'Test');\n      } else {\n        // Create default template if none exists\n        await emailTemplatesTable.create([\n          {\n            fields: {\n              Script1: 'Test'\n            }\n          }\n        ]);\n        setEmailTemplate('Test');\n      }\n    } catch (err) {\n      console.error('Error fetching email template:', err);\n      setEmailTemplate('Test'); // Fallback to default\n    }\n  };\n\n  const updateEmailTemplate = async (newTemplate) => {\n    try {\n      const records = await emailTemplatesTable.select().all();\n      if (records.length > 0) {\n        await emailTemplatesTable.update([\n          {\n            id: records[0].id,\n            fields: {\n              Script1: newTemplate\n            }\n          }\n        ]);\n      }\n      setEmailTemplate(newTemplate);\n    } catch (err) {\n      console.error('Error updating email template:', err);\n    }\n  };\n\n  const handleSelectClient = (clientId) => {\n    setSelectedClients(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(clientId)) {\n        newSelected.delete(clientId);\n      } else {\n        newSelected.add(clientId);\n      }\n      return newSelected;\n    });\n  };\n\n  const handleSelectAll = () => {\n    if (selectedClients.size === clients.length) {\n      setSelectedClients(new Set());\n    } else {\n      setSelectedClients(new Set(clients.map(client => client.id)));\n    }\n  };\n\n  const handleSendEmail = async () => {\n    const selectedClientEmails = clients\n      .filter(client => selectedClients.has(client.id))\n      .map(client => client.Email);\n\n    if (selectedClientEmails.length === 0) {\n      setSendingStatus('Please select at least one client.');\n      return;\n    }\n\n    setIsSending(true);\n    setSendingStatus('Sending emails...');\n\n    try {\n      await sendEmail(\n        selectedClientEmails,\n        'Ka Piki Update',\n        emailTemplate\n      );\n\n      setSendingStatus('Emails sent successfully!');\n      setSelectedClients(new Set());\n    } catch (err) {\n      console.error('Error sending emails:', err);\n      setSendingStatus(err.message || 'Failed to send emails. Please try again.');\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  if (loading) return <div className=\"clients-loading\">Loading clients...</div>;\n  if (error) return <div className=\"clients-error\">{error}</div>;\n\n  return (\n    <div className=\"clients-container\">\n      <Navigation />\n      <div className=\"clients-header\">\n        <h2>Clients</h2>\n        <div className=\"email-controls\">\n          <div className=\"template-editor\">\n            <label htmlFor=\"emailTemplate\">Email Template:</label>\n            <input\n              type=\"text\"\n              id=\"emailTemplate\"\n              value={emailTemplate}\n              onChange={(e) => updateEmailTemplate(e.target.value)}\n              className=\"template-input\"\n            />\n          </div>\n          <button \n            className=\"send-email-button\"\n            onClick={handleSendEmail}\n            disabled={selectedClients.size === 0 || isSending}\n          >\n            {isSending ? 'Sending...' : `Send Email (${selectedClients.size} selected)`}\n          </button>\n        </div>\n      </div>\n\n      {sendingStatus && (\n        <div className={`status-message ${sendingStatus.includes('success') ? 'success' : 'error'}`}>\n          {sendingStatus}\n        </div>\n      )}\n\n      <div className=\"clients-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedClients.size === clients.length && clients.length > 0}\n                  onChange={handleSelectAll}\n                />\n              </th>\n              <th>Organization</th>\n              <th>Contact</th>\n              <th>Email</th>\n              <th>Source</th>\n            </tr>\n          </thead>\n          <tbody>\n            {clients.map(client => (\n              <tr key={client.id}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedClients.has(client.id)}\n                    onChange={() => handleSelectClient(client.id)}\n                  />\n                </td>\n                <td>{client.OrganizationName}</td>\n                <td>{client.ContactName}</td>\n                <td>{client.Email}</td>\n                <td>{Array.isArray(client.SourceType) ? client.SourceType.join(', ') : client.SourceType}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}