{"ast":null,"code":"import { Buffer } from \"buffer\";\nimport { createSign } from \"crypto\";\nconst SENDER_EMAIL = \"peta@kapiki.co.nz\";\n\n// Load credentials from the JSON file\nconst credentials = {\n  type: \"service_account\",\n  project_id: \"friendly-cargo-453820-h2\",\n  private_key_id: \"248488355de241a90e722e0cea6b5bd8f4a21095\",\n  private_key: \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCqDl7viIMbeV4J\\nfUG2ulH7nnyEo9JOYNMQVGlOiA0o2WqUhXv5FRlW47VEuHueiqZ2JIlOGJl4T96V\\nn1zDn5aNPxJSy5DtJjl9XUAXDvrH9KG77FS8/h3qDhG+0DYUJXbJQZAAHjUL1b/e\\n5sWVgy5T/7x696CA59VTmGjk3k4ABwTD0Fzguj2afOhir/7TE1MXyliDsY0y6TNN\\nBFzAXeHAI/DtaO8monvc9UdnIM1sbOwZnyzlbDJdiYtNaza701M4Dii6pEkoFrQg\\njzRIRB8lzpfsR7oDheHLeHbm/9xzfrTYJSiWF6QHRCJGNKEpEyAuojREGmpRX4z3\\npkxo+cLrAgMBAAECggEAK11OyDY/eJoSaMkQINCSZ1+a0RgVYPc/20IrOGNpN6l5\\njDYdzv6aX5Xhe4yvuVYR7L6UZN3RBOUZFX514Uyoz4vt2D8gzdiZgGZvGXIwcRzo\\nwUsasLb8WdsMm2Ps5mZHTDrzxZPuYv4211hxuhahkbn9Dj5nJ3f25kJPPU2TBl5Z\\nUXSHfsUnlPqksUjkMJ4y9ou4iAmgfJSrd7xr37wfafbozxUmcjhm1E+W6V0ask9Z\\nCH2FlxLeucKd7l/Pj+kPFXdWmt9Yd1CwMsf8jxE61DJu4IZVyUM3Y23IVfk7d0LC\\nqk2yiJyK25DRn7nriXAvTBPaGWNAoc0EMtaRq0cIQQKBgQDZHGCv3oP+hq9QrbjJ\\nBpXdiqCwXf5FitrTbdiFwddzCvIKokPNpNp28S7YhyXzEGGrMX6In1yR2emWHvkk\\nRqx5KBEoYclwRrrdqkvPG3ifpfT2bbj/mZl9j3KtCRAKVZAEIdldXu0+XCxcKW15\\n3OUxH+ShbzBWWvL4X93egImENwKBgQDIhExeKRxKr8VbOzD347zCzkFSjVd8Augj\\nokRqmWyWkJRDF5WLRj3FP0DuL7I+PnqY5dI9wRdCNHBqE2W5+7LQxYELV6kqJjZY\\njaq2ULwmkegLVFJWqrw4gYzG/acBiPFbV4/bDMdTh57dBTHXd98gAs4lMdhme0z+\\nebdy53KE7QKBgBpbS5GOHdAEYbwVmt0so3zlm2RNxNSEatRH/YUfZxxcM83+rOSG\\nIs9VsC4xGfZMAs9ZjtbfIcnC/oxu7iftPHro1kxksqOisoS+a72UxCv9ZaOU5mSB\\nLRUFGRLQitX2VSlrQowHPh3X6rq1fMjSfDBegs7mRKP3Ho/wc2rTh945AoGBAMhP\\nCW8jCGU/1BrANbndIktE+hJ6qgNzb+1xA4GuBMEga0veuoBoSfrKppWKxjfR+GzX\\nYUBZrV9wvT/qYrv5Sfeu5ausBYzaoX2y/++jFWI+bZ0rvhlf9ClKmZSL/hLVd660\\n+TttN44lNDk9ID5MPHRg+QhFFBXEZPTuKKm7tjY9AoGAOsc64WeKS6hiCsblScph\\nJz6HthPkFupeeTaAmVgSQVlBZvpQkmPC7aPZwHGmuJA+n5TgvupP5qGAT9KyVJh4\\n5Ztw5E6Rb2WKafKxLbUSn2fmnTEyxWTU/ldwH+1eBZHiBsrHAciM793uDrWXTguv\\n50CL4JAh1uSFM+tRaX33n34=\\n-----END PRIVATE KEY-----\\n\",\n  client_email: \"kapiki-email-service@friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  client_id: \"114420241960759178680\",\n  auth_uri: \"https://accounts.google.com/o/oauth2/auth\",\n  token_uri: \"https://oauth2.googleapis.com/token\",\n  auth_provider_x509_cert_url: \"https://www.googleapis.com/oauth2/v1/certs\",\n  client_x509_cert_url: \"https://www.googleapis.com/robot/v1/metadata/x509/kapiki-email-service%40friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  universe_domain: \"googleapis.com\"\n};\nasync function createJWT() {\n  const now = Math.floor(Date.now() / 1000);\n  const header = {\n    alg: \"RS256\",\n    typ: \"JWT\",\n    kid: credentials.private_key_id\n  };\n  const payload = {\n    iss: credentials.client_email,\n    scope: \"https://www.googleapis.com/auth/gmail.send\",\n    aud: credentials.token_uri,\n    exp: now + 3600,\n    iat: now\n  };\n  const encodedHeader = Buffer.from(JSON.stringify(header)).toString(\"base64url\");\n  const encodedPayload = Buffer.from(JSON.stringify(payload)).toString(\"base64url\");\n  const sign = createSign(\"RSA-SHA256\");\n  sign.write(encodedHeader + \".\" + encodedPayload);\n  sign.end();\n  const signature = sign.sign(credentials.private_key, \"base64url\");\n  return `${encodedHeader}.${encodedPayload}.${signature}`;\n}\nfunction createMessage(to, bcc, subject, messageText) {\n  const str = [\"From: \" + SENDER_EMAIL, \"To: \" + to, \"Bcc: \" + bcc.join(\",\"), \"Subject: \" + subject, \"\", messageText].join(\"\\n\");\n  return Buffer.from(str).toString(\"base64url\");\n}\nexport async function sendEmail(recipientEmails, subject, messageText) {\n  try {\n    const message = createMessage(SENDER_EMAIL, recipientEmails, subject, messageText);\n\n    // Get the access token using the service account\n    const tokenResponse = await fetch(credentials.token_uri, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: new URLSearchParams({\n        grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n        assertion: await createJWT()\n      })\n    });\n    if (!tokenResponse.ok) {\n      var _errorData$error;\n      const errorData = await tokenResponse.json();\n      throw new Error(((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || \"Failed to get access token\");\n    }\n    const {\n      access_token\n    } = await tokenResponse.json();\n    const response = await fetch(\"https://gmail.googleapis.com/gmail/v1/users/me/messages/send\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        raw: message\n      })\n    });\n    if (!response.ok) {\n      var _errorData$error2;\n      const errorData = await response.json();\n      throw new Error(((_errorData$error2 = errorData.error) === null || _errorData$error2 === void 0 ? void 0 : _errorData$error2.message) || \"Failed to send email\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    throw new Error(\"Failed to send email. Please ensure you're properly authenticated with Gmail.\");\n  }\n}","map":{"version":3,"names":["Buffer","createSign","SENDER_EMAIL","credentials","type","project_id","private_key_id","private_key","client_email","client_id","auth_uri","token_uri","auth_provider_x509_cert_url","client_x509_cert_url","universe_domain","createJWT","now","Math","floor","Date","header","alg","typ","kid","payload","iss","scope","aud","exp","iat","encodedHeader","from","JSON","stringify","toString","encodedPayload","sign","write","end","signature","createMessage","to","bcc","subject","messageText","str","join","sendEmail","recipientEmails","message","tokenResponse","fetch","method","headers","body","URLSearchParams","grant_type","assertion","ok","_errorData$error","errorData","json","Error","error","access_token","response","Authorization","raw","_errorData$error2","console"],"sources":["/Users/petakirikiri/Coding/Ka Piki/src/services/emailService.js"],"sourcesContent":["import { Buffer } from \"buffer\";\nimport { createSign } from \"crypto\";\n\nconst SENDER_EMAIL = \"peta@kapiki.co.nz\";\n\n// Load credentials from the JSON file\nconst credentials = {\n  type: \"service_account\",\n  project_id: \"friendly-cargo-453820-h2\",\n  private_key_id: \"248488355de241a90e722e0cea6b5bd8f4a21095\",\n  private_key:\n    \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCqDl7viIMbeV4J\\nfUG2ulH7nnyEo9JOYNMQVGlOiA0o2WqUhXv5FRlW47VEuHueiqZ2JIlOGJl4T96V\\nn1zDn5aNPxJSy5DtJjl9XUAXDvrH9KG77FS8/h3qDhG+0DYUJXbJQZAAHjUL1b/e\\n5sWVgy5T/7x696CA59VTmGjk3k4ABwTD0Fzguj2afOhir/7TE1MXyliDsY0y6TNN\\nBFzAXeHAI/DtaO8monvc9UdnIM1sbOwZnyzlbDJdiYtNaza701M4Dii6pEkoFrQg\\njzRIRB8lzpfsR7oDheHLeHbm/9xzfrTYJSiWF6QHRCJGNKEpEyAuojREGmpRX4z3\\npkxo+cLrAgMBAAECggEAK11OyDY/eJoSaMkQINCSZ1+a0RgVYPc/20IrOGNpN6l5\\njDYdzv6aX5Xhe4yvuVYR7L6UZN3RBOUZFX514Uyoz4vt2D8gzdiZgGZvGXIwcRzo\\nwUsasLb8WdsMm2Ps5mZHTDrzxZPuYv4211hxuhahkbn9Dj5nJ3f25kJPPU2TBl5Z\\nUXSHfsUnlPqksUjkMJ4y9ou4iAmgfJSrd7xr37wfafbozxUmcjhm1E+W6V0ask9Z\\nCH2FlxLeucKd7l/Pj+kPFXdWmt9Yd1CwMsf8jxE61DJu4IZVyUM3Y23IVfk7d0LC\\nqk2yiJyK25DRn7nriXAvTBPaGWNAoc0EMtaRq0cIQQKBgQDZHGCv3oP+hq9QrbjJ\\nBpXdiqCwXf5FitrTbdiFwddzCvIKokPNpNp28S7YhyXzEGGrMX6In1yR2emWHvkk\\nRqx5KBEoYclwRrrdqkvPG3ifpfT2bbj/mZl9j3KtCRAKVZAEIdldXu0+XCxcKW15\\n3OUxH+ShbzBWWvL4X93egImENwKBgQDIhExeKRxKr8VbOzD347zCzkFSjVd8Augj\\nokRqmWyWkJRDF5WLRj3FP0DuL7I+PnqY5dI9wRdCNHBqE2W5+7LQxYELV6kqJjZY\\njaq2ULwmkegLVFJWqrw4gYzG/acBiPFbV4/bDMdTh57dBTHXd98gAs4lMdhme0z+\\nebdy53KE7QKBgBpbS5GOHdAEYbwVmt0so3zlm2RNxNSEatRH/YUfZxxcM83+rOSG\\nIs9VsC4xGfZMAs9ZjtbfIcnC/oxu7iftPHro1kxksqOisoS+a72UxCv9ZaOU5mSB\\nLRUFGRLQitX2VSlrQowHPh3X6rq1fMjSfDBegs7mRKP3Ho/wc2rTh945AoGBAMhP\\nCW8jCGU/1BrANbndIktE+hJ6qgNzb+1xA4GuBMEga0veuoBoSfrKppWKxjfR+GzX\\nYUBZrV9wvT/qYrv5Sfeu5ausBYzaoX2y/++jFWI+bZ0rvhlf9ClKmZSL/hLVd660\\n+TttN44lNDk9ID5MPHRg+QhFFBXEZPTuKKm7tjY9AoGAOsc64WeKS6hiCsblScph\\nJz6HthPkFupeeTaAmVgSQVlBZvpQkmPC7aPZwHGmuJA+n5TgvupP5qGAT9KyVJh4\\n5Ztw5E6Rb2WKafKxLbUSn2fmnTEyxWTU/ldwH+1eBZHiBsrHAciM793uDrWXTguv\\n50CL4JAh1uSFM+tRaX33n34=\\n-----END PRIVATE KEY-----\\n\",\n  client_email:\n    \"kapiki-email-service@friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  client_id: \"114420241960759178680\",\n  auth_uri: \"https://accounts.google.com/o/oauth2/auth\",\n  token_uri: \"https://oauth2.googleapis.com/token\",\n  auth_provider_x509_cert_url: \"https://www.googleapis.com/oauth2/v1/certs\",\n  client_x509_cert_url:\n    \"https://www.googleapis.com/robot/v1/metadata/x509/kapiki-email-service%40friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  universe_domain: \"googleapis.com\",\n};\n\nasync function createJWT() {\n  const now = Math.floor(Date.now() / 1000);\n\n  const header = {\n    alg: \"RS256\",\n    typ: \"JWT\",\n    kid: credentials.private_key_id,\n  };\n\n  const payload = {\n    iss: credentials.client_email,\n    scope: \"https://www.googleapis.com/auth/gmail.send\",\n    aud: credentials.token_uri,\n    exp: now + 3600,\n    iat: now,\n  };\n\n  const encodedHeader = Buffer.from(JSON.stringify(header)).toString(\n    \"base64url\"\n  );\n  const encodedPayload = Buffer.from(JSON.stringify(payload)).toString(\n    \"base64url\"\n  );\n\n  const sign = createSign(\"RSA-SHA256\");\n  sign.write(encodedHeader + \".\" + encodedPayload);\n  sign.end();\n\n  const signature = sign.sign(credentials.private_key, \"base64url\");\n\n  return `${encodedHeader}.${encodedPayload}.${signature}`;\n}\n\nfunction createMessage(to, bcc, subject, messageText) {\n  const str = [\n    \"From: \" + SENDER_EMAIL,\n    \"To: \" + to,\n    \"Bcc: \" + bcc.join(\",\"),\n    \"Subject: \" + subject,\n    \"\",\n    messageText,\n  ].join(\"\\n\");\n\n  return Buffer.from(str).toString(\"base64url\");\n}\n\nexport async function sendEmail(recipientEmails, subject, messageText) {\n  try {\n    const message = createMessage(\n      SENDER_EMAIL,\n      recipientEmails,\n      subject,\n      messageText\n    );\n\n    // Get the access token using the service account\n    const tokenResponse = await fetch(credentials.token_uri, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: new URLSearchParams({\n        grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n        assertion: await createJWT(),\n      }),\n    });\n\n    if (!tokenResponse.ok) {\n      const errorData = await tokenResponse.json();\n      throw new Error(errorData.error?.message || \"Failed to get access token\");\n    }\n\n    const { access_token } = await tokenResponse.json();\n\n    const response = await fetch(\n      \"https://gmail.googleapis.com/gmail/v1/users/me/messages/send\",\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          raw: message,\n        }),\n      }\n    );\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error?.message || \"Failed to send email\");\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error sending email:\", error);\n    throw new Error(\n      \"Failed to send email. Please ensure you're properly authenticated with Gmail.\"\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}