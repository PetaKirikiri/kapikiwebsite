{"ast":null,"code":"import { google } from \"googleapis\";\nconst credentials = {\n  type: \"service_account\",\n  project_id: \"friendly-cargo-453820-h2\",\n  private_key_id: \"248488355de241a90e722e0cea6b5bd8f4a21095\",\n  private_key: \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCqDl7viIMbeV4J\\nfUG2ulH7nnyEo9JOYNMQVGlOiA0o2WqUhXv5FRlW47VEuHueiqZ2JIlOGJl4T96V\\nn1zDn5aNPxJSy5DtJjl9XUAXDvrH9KG77FS8/h3qDhG+0DYUJXbJQZAAHjUL1b/e\\n5sWVgy5T/7x696CA59VTmGjk3k4ABwTD0Fzguj2afOhir/7TE1MXyliDsY0y6TNN\\nBFzAXeHAI/DtaO8monvc9UdnIM1sbOwZnyzlbDJdiYtNaza701M4Dii6pEkoFrQg\\njzRIRB8lzpfsR7oDheHLeHbm/9xzfrTYJSiWF6QHRCJGNKEpEyAuojREGmpRX4z3\\npkxo+cLrAgMBAAECggEAK11OyDY/eJoSaMkQINCSZ1+a0RgVYPc/20IrOGNpN6l5\\njDYdzv6aX5Xhe4yvuVYR7L6UZN3RBOUZFX514Uyoz4vt2D8gzdiZgGZvGXIwcRzo\\nwUsasLb8WdsMm2Ps5mZHTDrzxZPuYv4211hxuhahkbn9Dj5nJ3f25kJPPU2TBl5Z\\nUXSHfsUnlPqksUjkMJ4y9ou4iAmgfJSrd7xr37wfafbozxUmcjhm1E+W6V0ask9Z\\nCH2FlxLeucKd7l/Pj+kPFXdWmt9Yd1CwMsf8jxE61DJu4IZVyUM3Y23IVfk7d0LC\\nqk2yiJyK25DRn7nriXAvTBPaGWNAoc0EMtaRq0cIQQKBgQDZHGCv3oP+hq9QrbjJ\\nBpXdiqCwXf5FitrTbdiFwddzCvIKokPNpNp28S7YhyXzEGGrMX6In1yR2emWHvkk\\nRqx5KBEoYclwRrrdqkvPG3ifpfT2bbj/mZl9j3KtCRAKVZAEIdldXu0+XCxcKW15\\n3OUxH+ShbzBWWvL4X93egImENwKBgQDIhExeKRxKr8VbOzD347zCzkFSjVd8Augj\\nokRqmWyWkJRDF5WLRj3FP0DuL7I+PnqY5dI9wRdCNHBqE2W5+7LQxYELV6kqJjZY\\njaq2ULwmkegLVFJWqrw4gYzG/acBiPFbV4/bDMdTh57dBTHXd98gAs4lMdhme0z+\\nebdy53KE7QKBgBpbS5GOHdAEYbwVmt0so3zlm2RNxNSEatRH/YUfZxxcM83+rOSG\\nIs9VsC4xGfZMAs9ZjtbfIcnC/oxu7iftPHro1kxksqOisoS+a72UxCv9ZaOU5mSB\\nLRUFGRLQitX2VSlrQowHPh3X6rq1fMjSfDBegs7mRKP3Ho/wc2rTh945AoGBAMhP\\nCW8jCGU/1BrANbndIktE+hJ6qgNzb+1xA4GuBMEga0veuoBoSfrKppWKxjfR+GzX\\nYUBZrV9wvT/qYrv5Sfeu5ausBYzaoX2y/++jFWI+bZ0rvhlf9ClKmZSL/hLVd660\\n+TttN44lNDk9ID5MPHRg+QhFFBXEZPTuKKm7tjY9AoGAOsc64WeKS6hiCsblScph\\nJz6HthPkFupeeTaAmVgSQVlBZvpQkmPC7aPZwHGmuJA+n5TgvupP5qGAT9KyVJh4\\n5Ztw5E6Rb2WKafKxLbUSn2fmnTEyxWTU/ldwH+1eBZHiBsrHAciM793uDrWXTguv\\n50CL4JAh1uSFM+tRaX33n34=\\n-----END PRIVATE KEY-----\\n\",\n  client_email: \"kapiki-email-service@friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  client_id: \"114420241960759178680\",\n  auth_uri: \"https://accounts.google.com/o/oauth2/auth\",\n  token_uri: \"https://oauth2.googleapis.com/token\",\n  auth_provider_x509_cert_url: \"https://www.googleapis.com/oauth2/v1/certs\",\n  client_x509_cert_url: \"https://www.googleapis.com/robot/v1/metadata/x509/kapiki-email-service%40friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  universe_domain: \"googleapis.com\"\n};\nconst SENDER_EMAIL = \"peta@kapiki.co.nz\";\n\n// Create JWT client\nconst auth = new google.auth.JWT({\n  email: credentials.client_email,\n  key: credentials.private_key,\n  scopes: [\"https://www.googleapis.com/auth/gmail.send\"],\n  subject: SENDER_EMAIL\n});\n\n// Create Gmail client\nconst gmail = google.gmail({\n  version: \"v1\",\n  auth\n});\nfunction createMessage(to, bcc, subject, messageText) {\n  const str = [\"From: \" + SENDER_EMAIL, \"To: \" + to, \"Bcc: \" + bcc.join(\",\"), \"Subject: \" + subject, \"\", messageText].join(\"\\n\");\n  const encodedMessage = Buffer.from(str).toString(\"base64\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n  return encodedMessage;\n}\nexport async function sendEmail(recipientEmails, subject, messageText) {\n  try {\n    const raw = createMessage(SENDER_EMAIL, recipientEmails, subject, messageText);\n    const res = await gmail.users.messages.send({\n      userId: \"me\",\n      requestBody: {\n        raw: raw\n      }\n    });\n    return {\n      success: true,\n      messageId: res.data.id\n    };\n  } catch (error) {\n    console.error(\"Failed to send email:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["google","credentials","type","project_id","private_key_id","private_key","client_email","client_id","auth_uri","token_uri","auth_provider_x509_cert_url","client_x509_cert_url","universe_domain","SENDER_EMAIL","auth","JWT","email","key","scopes","subject","gmail","version","createMessage","to","bcc","messageText","str","join","encodedMessage","Buffer","from","toString","replace","sendEmail","recipientEmails","raw","res","users","messages","send","userId","requestBody","success","messageId","data","id","error","console"],"sources":["/Users/petakirikiri/Coding/Ka Piki/src/services/emailService.js"],"sourcesContent":["import { google } from \"googleapis\";\n\nconst credentials = {\n  type: \"service_account\",\n  project_id: \"friendly-cargo-453820-h2\",\n  private_key_id: \"248488355de241a90e722e0cea6b5bd8f4a21095\",\n  private_key:\n    \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCqDl7viIMbeV4J\\nfUG2ulH7nnyEo9JOYNMQVGlOiA0o2WqUhXv5FRlW47VEuHueiqZ2JIlOGJl4T96V\\nn1zDn5aNPxJSy5DtJjl9XUAXDvrH9KG77FS8/h3qDhG+0DYUJXbJQZAAHjUL1b/e\\n5sWVgy5T/7x696CA59VTmGjk3k4ABwTD0Fzguj2afOhir/7TE1MXyliDsY0y6TNN\\nBFzAXeHAI/DtaO8monvc9UdnIM1sbOwZnyzlbDJdiYtNaza701M4Dii6pEkoFrQg\\njzRIRB8lzpfsR7oDheHLeHbm/9xzfrTYJSiWF6QHRCJGNKEpEyAuojREGmpRX4z3\\npkxo+cLrAgMBAAECggEAK11OyDY/eJoSaMkQINCSZ1+a0RgVYPc/20IrOGNpN6l5\\njDYdzv6aX5Xhe4yvuVYR7L6UZN3RBOUZFX514Uyoz4vt2D8gzdiZgGZvGXIwcRzo\\nwUsasLb8WdsMm2Ps5mZHTDrzxZPuYv4211hxuhahkbn9Dj5nJ3f25kJPPU2TBl5Z\\nUXSHfsUnlPqksUjkMJ4y9ou4iAmgfJSrd7xr37wfafbozxUmcjhm1E+W6V0ask9Z\\nCH2FlxLeucKd7l/Pj+kPFXdWmt9Yd1CwMsf8jxE61DJu4IZVyUM3Y23IVfk7d0LC\\nqk2yiJyK25DRn7nriXAvTBPaGWNAoc0EMtaRq0cIQQKBgQDZHGCv3oP+hq9QrbjJ\\nBpXdiqCwXf5FitrTbdiFwddzCvIKokPNpNp28S7YhyXzEGGrMX6In1yR2emWHvkk\\nRqx5KBEoYclwRrrdqkvPG3ifpfT2bbj/mZl9j3KtCRAKVZAEIdldXu0+XCxcKW15\\n3OUxH+ShbzBWWvL4X93egImENwKBgQDIhExeKRxKr8VbOzD347zCzkFSjVd8Augj\\nokRqmWyWkJRDF5WLRj3FP0DuL7I+PnqY5dI9wRdCNHBqE2W5+7LQxYELV6kqJjZY\\njaq2ULwmkegLVFJWqrw4gYzG/acBiPFbV4/bDMdTh57dBTHXd98gAs4lMdhme0z+\\nebdy53KE7QKBgBpbS5GOHdAEYbwVmt0so3zlm2RNxNSEatRH/YUfZxxcM83+rOSG\\nIs9VsC4xGfZMAs9ZjtbfIcnC/oxu7iftPHro1kxksqOisoS+a72UxCv9ZaOU5mSB\\nLRUFGRLQitX2VSlrQowHPh3X6rq1fMjSfDBegs7mRKP3Ho/wc2rTh945AoGBAMhP\\nCW8jCGU/1BrANbndIktE+hJ6qgNzb+1xA4GuBMEga0veuoBoSfrKppWKxjfR+GzX\\nYUBZrV9wvT/qYrv5Sfeu5ausBYzaoX2y/++jFWI+bZ0rvhlf9ClKmZSL/hLVd660\\n+TttN44lNDk9ID5MPHRg+QhFFBXEZPTuKKm7tjY9AoGAOsc64WeKS6hiCsblScph\\nJz6HthPkFupeeTaAmVgSQVlBZvpQkmPC7aPZwHGmuJA+n5TgvupP5qGAT9KyVJh4\\n5Ztw5E6Rb2WKafKxLbUSn2fmnTEyxWTU/ldwH+1eBZHiBsrHAciM793uDrWXTguv\\n50CL4JAh1uSFM+tRaX33n34=\\n-----END PRIVATE KEY-----\\n\",\n  client_email:\n    \"kapiki-email-service@friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  client_id: \"114420241960759178680\",\n  auth_uri: \"https://accounts.google.com/o/oauth2/auth\",\n  token_uri: \"https://oauth2.googleapis.com/token\",\n  auth_provider_x509_cert_url: \"https://www.googleapis.com/oauth2/v1/certs\",\n  client_x509_cert_url:\n    \"https://www.googleapis.com/robot/v1/metadata/x509/kapiki-email-service%40friendly-cargo-453820-h2.iam.gserviceaccount.com\",\n  universe_domain: \"googleapis.com\",\n};\n\nconst SENDER_EMAIL = \"peta@kapiki.co.nz\";\n\n// Create JWT client\nconst auth = new google.auth.JWT({\n  email: credentials.client_email,\n  key: credentials.private_key,\n  scopes: [\"https://www.googleapis.com/auth/gmail.send\"],\n  subject: SENDER_EMAIL,\n});\n\n// Create Gmail client\nconst gmail = google.gmail({ version: \"v1\", auth });\n\nfunction createMessage(to, bcc, subject, messageText) {\n  const str = [\n    \"From: \" + SENDER_EMAIL,\n    \"To: \" + to,\n    \"Bcc: \" + bcc.join(\",\"),\n    \"Subject: \" + subject,\n    \"\",\n    messageText,\n  ].join(\"\\n\");\n\n  const encodedMessage = Buffer.from(str)\n    .toString(\"base64\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=+$/, \"\");\n\n  return encodedMessage;\n}\n\nexport async function sendEmail(recipientEmails, subject, messageText) {\n  try {\n    const raw = createMessage(\n      SENDER_EMAIL,\n      recipientEmails,\n      subject,\n      messageText\n    );\n\n    const res = await gmail.users.messages.send({\n      userId: \"me\",\n      requestBody: {\n        raw: raw,\n      },\n    });\n\n    return { success: true, messageId: res.data.id };\n  } catch (error) {\n    console.error(\"Failed to send email:\", error);\n    throw error;\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,MAAMC,WAAW,GAAG;EAClBC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,0BAA0B;EACtCC,cAAc,EAAE,0CAA0C;EAC1DC,WAAW,EACT,ssDAAssD;EACxsDC,YAAY,EACV,uEAAuE;EACzEC,SAAS,EAAE,uBAAuB;EAClCC,QAAQ,EAAE,2CAA2C;EACrDC,SAAS,EAAE,qCAAqC;EAChDC,2BAA2B,EAAE,4CAA4C;EACzEC,oBAAoB,EAClB,2HAA2H;EAC7HC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,YAAY,GAAG,mBAAmB;;AAExC;AACA,MAAMC,IAAI,GAAG,IAAId,MAAM,CAACc,IAAI,CAACC,GAAG,CAAC;EAC/BC,KAAK,EAAEf,WAAW,CAACK,YAAY;EAC/BW,GAAG,EAAEhB,WAAW,CAACI,WAAW;EAC5Ba,MAAM,EAAE,CAAC,4CAA4C,CAAC;EACtDC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACA,MAAMO,KAAK,GAAGpB,MAAM,CAACoB,KAAK,CAAC;EAAEC,OAAO,EAAE,IAAI;EAAEP;AAAK,CAAC,CAAC;AAEnD,SAASQ,aAAaA,CAACC,EAAE,EAAEC,GAAG,EAAEL,OAAO,EAAEM,WAAW,EAAE;EACpD,MAAMC,GAAG,GAAG,CACV,QAAQ,GAAGb,YAAY,EACvB,MAAM,GAAGU,EAAE,EACX,OAAO,GAAGC,GAAG,CAACG,IAAI,CAAC,GAAG,CAAC,EACvB,WAAW,GAAGR,OAAO,EACrB,EAAE,EACFM,WAAW,CACZ,CAACE,IAAI,CAAC,IAAI,CAAC;EAEZ,MAAMC,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CACpCK,QAAQ,CAAC,QAAQ,CAAC,CAClBC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAErB,OAAOJ,cAAc;AACvB;AAEA,OAAO,eAAeK,SAASA,CAACC,eAAe,EAAEf,OAAO,EAAEM,WAAW,EAAE;EACrE,IAAI;IACF,MAAMU,GAAG,GAAGb,aAAa,CACvBT,YAAY,EACZqB,eAAe,EACff,OAAO,EACPM,WACF,CAAC;IAED,MAAMW,GAAG,GAAG,MAAMhB,KAAK,CAACiB,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;MAC1CC,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE;QACXN,GAAG,EAAEA;MACP;IACF,CAAC,CAAC;IAEF,OAAO;MAAEO,OAAO,EAAE,IAAI;MAAEC,SAAS,EAAEP,GAAG,CAACQ,IAAI,CAACC;IAAG,CAAC;EAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}